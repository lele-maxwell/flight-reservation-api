/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Ticket model module.
 * @module model/Ticket
 * @version v0
 */
class Ticket {
    /**
     * Constructs a new <code>Ticket</code>.
     * @alias module:model/Ticket
     */
    constructor() { 
        
        Ticket.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Ticket</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Ticket} obj Optional instance to populate.
     * @return {module:model/Ticket} The populated <code>Ticket</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Ticket();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('passengerName')) {
                obj['passengerName'] = ApiClient.convertToType(data['passengerName'], 'String');
            }
            if (data.hasOwnProperty('companyName')) {
                obj['companyName'] = ApiClient.convertToType(data['companyName'], 'String');
            }
            if (data.hasOwnProperty('originAddress')) {
                obj['originAddress'] = ApiClient.convertToType(data['originAddress'], 'String');
            }
            if (data.hasOwnProperty('destinationAddress')) {
                obj['destinationAddress'] = ApiClient.convertToType(data['destinationAddress'], 'String');
            }
            if (data.hasOwnProperty('kickoffDate')) {
                obj['kickoffDate'] = ApiClient.convertToType(data['kickoffDate'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Ticket</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Ticket</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['passengerName'] && !(typeof data['passengerName'] === 'string' || data['passengerName'] instanceof String)) {
            throw new Error("Expected the field `passengerName` to be a primitive type in the JSON string but got " + data['passengerName']);
        }
        // ensure the json data is a string
        if (data['companyName'] && !(typeof data['companyName'] === 'string' || data['companyName'] instanceof String)) {
            throw new Error("Expected the field `companyName` to be a primitive type in the JSON string but got " + data['companyName']);
        }
        // ensure the json data is a string
        if (data['originAddress'] && !(typeof data['originAddress'] === 'string' || data['originAddress'] instanceof String)) {
            throw new Error("Expected the field `originAddress` to be a primitive type in the JSON string but got " + data['originAddress']);
        }
        // ensure the json data is a string
        if (data['destinationAddress'] && !(typeof data['destinationAddress'] === 'string' || data['destinationAddress'] instanceof String)) {
            throw new Error("Expected the field `destinationAddress` to be a primitive type in the JSON string but got " + data['destinationAddress']);
        }

        return true;
    }


}



/**
 * @member {Number} id
 */
Ticket.prototype['id'] = undefined;

/**
 * @member {String} passengerName
 */
Ticket.prototype['passengerName'] = undefined;

/**
 * @member {String} companyName
 */
Ticket.prototype['companyName'] = undefined;

/**
 * @member {String} originAddress
 */
Ticket.prototype['originAddress'] = undefined;

/**
 * @member {String} destinationAddress
 */
Ticket.prototype['destinationAddress'] = undefined;

/**
 * @member {Date} kickoffDate
 */
Ticket.prototype['kickoffDate'] = undefined;






export default Ticket;

